# {{ ansible_managed }}

# Environment configuration file for Patroni


###############################################################################
# Main Docker settings

# Image name (with tag)
IMAGE_TAG=mmartinello/patroni:{{ patroni_docker_image_tag }}

# Docker restart policy
DOCKER_RESTART_POLICY={{ patroni_docker_restart_policy }}

# Directory to mount application logs dir to
PATRONI_HOST_LOG_DIR={{ patroni_log_dir }}

# Host directory to mount PostgreSQL data dir on
PATRONI_POSTGRESQL_HOST_DATA_DIR={{ patroni_postgresql_data_dir }}

# PostgreSQL port (on host, redirected to container)
POSTGRESQL_HOST_PORT={{ patroni_postgresql_port }}

# REST API port (on host, redirected to container)
PATRONI_RESTAPI_HOST_PORT={{ patroni_restapi_port }}


###############################################################################
# Patroni settings

# Hostname of the Patroni container (has to be unique in the cluster!)
PATRONI_HOSTNAME={{ patroni_hostname }}

# Cluster name
PATRONI_SCOPE={{ patroni_scope }}

# Sets the general logging level. Default value is INFO
# See docs for Python logging:
# https://docs.python.org/3.6/library/logging.html#levels
PATRONI_LOG_LEVEL={{ patroni_log_level }}

# etcdv3 hosts
PATRONI_ETCD3_HOSTS="'{{ patroni_etcd3_hosts | join("','") }}'"


###############################################################################
# PostgreSQL settings

# Path to PostgreSQL binaries. (pg_ctl, initdb, pg_controldata, pg_basebackup,
# postgres, pg_isready, pg_rewind) The default value is an empty string
# meaning that PATH environment variable will be used to find the executables.
PATRONI_POSTGRESQL_BIN_DIR={{ patroni_postgresql_bin_dir }}

# Name for the superuser, set during initialization (initdb) and later used by
# Patroni to connect to the postgres, also this user is used by pg_rewind
PATRONI_SUPERUSER_USERNAME={{ patroni_superuser_username }}

# password for the superuser, set during initialization (initdb)
PATRONI_SUPERUSER_PASSWORD={{ patroni_superuser_password }}

# Replication username; the user will be created during initialization.
# Replicas will use this user to access the replication source via
# streaming replication
PATRONI_REPLICATION_USERNAME={{ patroni_replication_username }}

# Replication password; the user will be created during initialization
PATRONI_REPLICATION_PASSWORD={{ patroni_replication_password }}

# IP address + port through which Postgres is accessible from other nodes and applications.
PATRONI_POSTGRESQL_CONNECT_ADDRESS={{ patroni_postgresql_connect_address }}


###############################################################################
# Patroni REST API settings

# IP address and port to access the REST API
PATRONI_RESTAPI_CONNECT_ADDRESS={{ patroni_restapi_connect_address }}

# Basic-auth username to protect unsafe REST API endpoints
PATRONI_RESTAPI_USERNAME={{ patroni_restapi_username }}

# Basic-auth password to protect unsafe REST API endpoints
PATRONI_RESTAPI_PASSWORD={{ patroni_restapi_password }}
